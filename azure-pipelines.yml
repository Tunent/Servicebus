trigger:
- main
stages:
- stage: build
  jobs:
  - job: run_build
    pool:
      vmImage: 'windows-latest'
    steps:
    # - task: VSBuild@1
    #   inputs:
    #     solution: '**/*.sln'
    #     msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    #     platform: 'Any CPU'
    #     configuration: 'Release'

    - task: CopyFiles@2
      displayName: 'Copy scripts'
      inputs:
        contents: 'scripts/**'
        targetFolder: '$(Build.ArtifactStagingDirectory)'

    - publish: '$(Build.ArtifactStagingDirectory)/scripts'
      displayName: 'Publish script'
      artifact: drop

# - stage: test
#   dependsOn: build
#   jobs:
#   - job: run_test
#     pool:
#       vmImage: 'windows-latest'
#     steps:
#     - download: current
#       artifact: drop
#     - task: PowerShell@2
#       inputs:
#         filePath: '$(Pipeline.Workspace)\drop\test.ps1'









# trigger:
# - main

# pool:
#   vmImage: 'ubuntu-latest'
# steps:
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'build'
#     projects: '**/*.csproj'

# - task: CopyFiles@2
#   inputs:
#     sourceFolder: '$(Build.SourcesDirectory)'
#     contents: '**/$(BuildConfiguration)/**/?(*.exe|*.dll|*.pdb)'
#     targetFolder: '$(Build.ArtifactStagingDirectory)'
# - task: PublishBuildArtifacts@1
#   inputs:
#     pathToPublish: '$(Build.ArtifactStagingDirectory)'
#     artifactName: drop
    
# steps:
# - script: |
#     dotnet restore
#     dotnet build --configuration Release
# - task: DotNetCoreCLI@2
#   inputs:
#     command: publish
#     arguments: '--configuration Release --output publish_output'
#     projects: '*.csproj'
#     publishWebProjects: false
#     modifyOutputPath: false
#     zipAfterPublish: false
# - task: ArchiveFiles@2
#   displayName: "Archive files"
#   inputs:
#     rootFolderOrFile: "$(System.DefaultWorkingDirectory)/publish_output"
#     includeRootFolder: false
#     archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
#     artifactName: 'drop'

