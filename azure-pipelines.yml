trigger:
- master

variables:
- group: TrevorVarGroup
- name: sub-id
  value: $[variables.groupsubid] # get from Library group
- name: web-app-name
  value: $[variables.groupwebappname] # get from Library group

      
pool:
  vmImage: ubuntu-latest

# Build projects
stages:
- stage: Build
  jobs:
  - job: RestoreBuildAllProjects
    steps:
    - task: DotNetCoreCLI@2
      displayName: 'dotnet restore'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: 'build'
        projects: '**/*.csproj'  
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        arguments: '--output $(Build.ArtifactStagingDirectory)'
# - stage: Copy_and_Publish_Artifact
#   jobs:
#     - job: CopyPublishAllProjects
#       steps:
    - task: CopyFiles@2
      inputs:
          SourceFolder: 'AzureResourceGroup1'
          Contents: '*.json'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
- stage: Publish_to_web_servce
  jobs: 
      - job: PublishToWebService
        steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: '$(sbu-id)'
              appType: 'webAppLinux'
              appName: '$(web-app-name)'
              # package: '$(System.DefaultWorkingDirectory)/**/*.zip'
              package: '$(Build.ArtifactStagingDirectory/**/RestAPI.zip)'